/***************************************************************************
                          singleton_defuzzyfier.h  -  description
                             -------------------
    begin                : Wed Sep 13 2000
    copyright            : (C) 2000 by Halva Giovanni & Giacomo
    email                : invehalv@airlab.elet.polimi.it
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/
//	Specifies the classes used to fuzzyfy and defuzzyfy data



#ifndef singleton_defuzzyfier_h
#define singleton_defuzzyfier_h 1

#ifdef DMALLOC

#include <dmalloc.h>

#endif

#include "singleton.h"
#include "defuzzyfier.h"


/**
* Class that defuzzyfies fuzzy data with the singleton method.
* @short defuzzyfies with singleton
*/

class singleton_defuzzyfier : public defuzzyfier  //## Inherits: <unnamed>%38592FB302EE
{
 public:
  /**
   * Constructor generated by the UML software used to build Brian. It return an empty singleton defuzzyfier.
   */
  singleton_defuzzyfier();

  /**
   * Copy constructor generated by the UML software used to build Brian. It return a copy of the singleton defuzzifyer.
   */
  singleton_defuzzyfier(const singleton_defuzzyfier &right);

  /*
   * Constructor that build a singleton defuzzyfier. It call the fuzzy_crisp_rel constructor.
   * @see fuzzy_crisp_rel
   * @param shapefileparser pointers to an object of kind shape_file_parser containing shapes
   * @param assocfileparser pointers to an object of kind assoc_file_parser containing associations 
   */
  singleton_defuzzyfier (shape_file_parser *shapefileparser, assoc_file_parser *assocfileparser);

  /**	
   * Call the defuzzyfier destructor
   * @see ~defuzzyfier
   */
  virtual ~singleton_defuzzyfier();

  /**
   * Method that, given a list of actions expressed in fuzzy way, returns a list of commands using the singleton method. 
   * @param actionlist is the list of fuzzy data
   * @return a list of crisp data
   */ 
  command_list * defuzzyfy (action_list * actionlist);
};

#endif
