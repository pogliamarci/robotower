/***************************************************************************
                          fuzzyfier.h  -  description
                             -------------------
    begin                : Wed Sep 13 2000
    copyright            : (C) 2000 by Halva Giovanni & Giacomo
    email                : invehalv@airlab.elet.polimi.it
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/
//	Specifies the classes used to fuzzyfy and defuzzyfy data


#ifndef fuzzyfier_h
#define fuzzyfier_h 1

#ifdef DMALLOC

#include <dmalloc.h>

#endif

#include "fuzzy_crisp_rel.h"
#include "crisp_data_list.h"
#include "fuzzy_data_list.h"


/**
* Class that implements the conversion between crisp data and fuzzy data identified in the fuzzy_crisp_rel.
* @short fuzzyfies crisp data
*/

class fuzzyfier : public fuzzy_crisp_rel 
{
 public:
  /**
   * Constructor generated by the UML software used to build Brian. It return an empty fuzzyfier.
   */
  fuzzyfier();

  /**
   * Copy constructor generated by the UML software used to build Brian. It return a copy of the fuzzyfier.
   */
  fuzzyfier(const fuzzyfier &right);

  /*
   * Constructor that build a fuzzyfier. It call the fuzzy_crisp_rel constructor.
   * @see fuzzy_crisp_rel
   * @param shapefileparser pointers to an object of kind shape_file_parser containing shapes
   * @param assocfileparser pointers to an object of kind assoc_file_parser containing associations 
   */
  fuzzyfier (shape_file_parser *shapefileparser, assoc_file_parser *assocfileparser);

  /**	
   * Call the fuzzy_crisp_rel destructor
   * @see ~fuzzy_crisp_rel
   */
  ~fuzzyfier();

  /**
   * Method that, given a list  of crisp data, returns the associated fuzzy data.
   * @param datalist is the list of crisp data
   * @return a list of fuzzy data
   */ 
  fuzzy_data_list* fuzzyfy (crisp_data_list *);
};

#endif
