/***************************************************************************
                          triangle.h  -  description
                             -------------------
    begin                : Wed Sep 13 2000
    copyright            : (C) 2000 by Halva Giovanni & Giacomo
    email                : invehalv@airlab.elet.polimi.it
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/


#ifndef triangle_h
#define triangle_h 1

#include "trapezium.h"

#ifdef DMALLOC

#include <dmalloc.h>

#endif


/**
* This class inherits from trapetium and specifies it to be a triangle.  The get_membership_value, all the get and set methods are the same of trapezium.
* @see trapezium 
* @short Class implementing the concept of triangular fuzzy set.
*/

class triangle : public trapezium  //## Inherits: triangle_inheritance%382BDE180334
{
 public:
  /**
   * Constructor generated by the UML software used to build Brian. It return an empty triangle.
   */
  triangle();

  /**
   * Copy constructor generated by the UML software used to build Brian. It return a copy of the fuzzy set passed.
   */
  triangle(const triangle &right);

  /**	
   * Constructor that build a triangle.
   * @param alabel is the label given to the the fuzzy set
   * @param aa is the first point of the fuzzy set
   * @param ab is the second point of the fuzzy set
   * @param ab is the third point of the fuzzy set
   */
  triangle (char* alabel, float aa, float ab, float ad);

  /**	
   * Destructor destroy a fuzzy set and free its data.
   */
  virtual ~triangle();
};

#endif
