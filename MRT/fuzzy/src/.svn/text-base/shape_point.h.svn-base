/***************************************************************************
                          shape_point.h  -  description
                             -------------------
    begin                : Wed Sep 13 2000
    copyright            : (C) 2000 by Halva Giovanni & Giacomo
    email                : invehalv@airlab.elet.polimi.it
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/


#ifndef shape_point_h
#define shape_point_h 1

#include "point.h"

#ifdef DMALLOC

#include <dmalloc.h>

#endif


/**
* This class inherits from point and specifies it to be the collection of all the shape points.
* @short class implementing the point of a shape.
*/

class shape_point : public point  //## Inherits: <unnamed>%385AB3D102C6
{
 public:
  /**
   * Constructor generated by the UML software used to build Brian. It return an empty shape point.
   */
  shape_point();

  /**
   * Copy constructor generated by the UML software used to build Brian. It return a copy of the shape point.
   */
  shape_point(const shape_point &right);

  /*
   * Constructor that build a shape point given all the abscissas and ordinates of them.
   */
  shape_point(float axa, float aya, float axb, float ayb, float axc, float ayc, float axd, float yd);

  /**	
   * Destructor destroy a shape point
   */
  ~shape_point();

  /**
   * Return the ordinate of the first point
   * @return a value
   */
  const float get_ya ();
  /**
   * Set the ordinate of the first point
   * @param value the new value for the ordinate
   */
  void set_ya (float value);

  /**
   * Return the abscissa of the second point
   * @return a value
   */
  const float get_xb ();
  /**
   * Set the abscissa of the second point
   * @param value the new value for the abscissa
   */
  void set_xb (float value);

  /**
   * Return the ordinate of the second point
   * @return a value
   */
  const float get_yb ();
  /**
   * Set the ordinate of the second point
   * @param value the new value for the ordinate
   */
  void set_yb (float value);

  /**
   * Return the abscissa of the third point
   * @return a value
   */
  const float get_xc ();
  /**
   * Set the abscissa of the third point
   * @param value the new value for the abscissa
   */
  void set_xc (float value);

  /**
   * Return the ordinate of the third point
   * @return a value
   */
  const float get_yc ();
  /**
   * Set the ordinate of the third point
   * @param value the new value for the ordinate
   */
  void set_yc (float value);

  /**
   * Return the abscissa of the fourth point
   * @return a value
   */
  const float get_xd ();
    /**
   * Set the abscissa of the fourth point
   * @param value the new value for the abscissa
   */
  void set_xd (float value);

  /**
   * Return the ordinate of the fourth point
   * @return a value
   */
  const float get_yd ();
  /**
   * Set the ordinate of the fourth point
   * @param value the new value for the ordinate
   */
  void set_yd (float value);
  
 private: 
    // Data Members for Class Attributes

  float xa;
  
  float ya;

  float xb;

  float yb;

  float xc;

  float yc;

  float xd;

  float yd;
};

// Class shape_point

inline const float shape_point::get_xb ()
{
  return xb;
}

inline void shape_point::set_xb (float value)
{
  xb = value;
}

inline const float shape_point::get_yb ()
{
  return yb;
}

inline void shape_point::set_yb (float value)
{
  yb = value;
}

inline const float shape_point::get_xc ()
{
  return xc;
}

inline void shape_point::set_xc (float value)
{
  xc = value;
}

inline const float shape_point::get_yc ()
{
  return yc;
}

inline void shape_point::set_yc (float value)
{
  yc = value;
}

inline const float shape_point::get_xd ()
{
  return xd;
}

inline void shape_point::set_xd (float value)
{
  xd = value;
}

inline const float shape_point::get_yd ()
{
  return yd;
}

inline void shape_point::set_yd (float value)
{
  yd = value;
}


#endif
