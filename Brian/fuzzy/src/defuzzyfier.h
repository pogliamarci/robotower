/***************************************************************************
                          defuzzyfier.h  -  description
                             -------------------
    begin                : Wed Sep 13 2000
    copyright            : (C) 2000 by Halva Giovanni & Giacomo
    email                : invehalv@airlab.elet.polimi.it
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/
//	Specifies the classes used to fuzzyfy and defuzzyfy data


#ifndef defuzzyfier_h
#define defuzzyfier_h 1

#ifdef DMALLOC

#include <dmalloc.h>

#endif

#include "fuzzy_crisp_rel.h"
#include "shape_file_parser.h"
#include "assoc_file_parser.h"

#include <action_list.h>   //brian/include
#include <command_list.h>  //brian/include

/**
* Abstract class that realizes the conversion between fuzzy data and crisp data identified in the fuzzy_crisp_rel.
* @short converts between fuzzy and crisp 
*/

class defuzzyfier : public fuzzy_crisp_rel  //## Inherits: defuzzyfier inheritance%380F1B6F02DA
{
 public:
  /**
   * Constructor generated by the UML software used to build Brian. It return an empty defuzzyfier.
   */
  defuzzyfier();

  /**
   * Copy constructor generated by the UML software used to build Brian. It return a copy of the defuzzyfier.
   */
  defuzzyfier(const defuzzyfier &right);

  /*
   * Constructor that build a more general defuzzyfier. It call the fuzzy_crisp_rel constructor.
   * @see fuzzy_crisp_rel
   * @param shapefileparser pointers to an object of kind shape_file_parser containing shapes
   * @param assocfileparser pointers to an object of kind assoc_file_parser containing associations 
   */
  defuzzyfier (shape_file_parser *shapefileparser, assoc_file_parser *assocfileparser);

  /**	
   * Call the fuzzy_crisp_rel destructor
   * @see ~fuzzy_crisp_rel
   */
  virtual ~defuzzyfier();

  /**
   * Virtual method that, given a list of actions expressed in fuzzy way, returns a list of commands, i.e. of set points, as the result of the actions' combination.
   * @param actionlist is the list of fuzzy data
   * @return a list of crisp data
   */ 
  virtual command_list* defuzzyfy (action_list * acl)=0;

};


#endif
